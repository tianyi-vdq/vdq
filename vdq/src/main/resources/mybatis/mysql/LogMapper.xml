<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianyi.yw.dao.LogMapper" >
  <resultMap id="BaseResultMap" type="com.tianyi.yw.model.Log" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, content, type_id, create_time, description,
   
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tianyi.yw.model.Log" >
    <selectKey resultType="INTEGER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
    insert into t_log (id, content, type_id, 
      create_time, description)
    values (#{id,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{typeId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tianyi.yw.model.Log" >
    insert into t_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianyi.yw.model.Log" >
    update t_log
    <set >
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tianyi.yw.model.Log" >
    update t_log
    set content = #{content,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <sql id="query_sql">
  	from t_log  
  	 where 1=1 
  	 <if test="searchName != null and searchName !=''" >
      and( 
      	content like CONCAT('%',#{searchName,jdbcType=VARCHAR},'%')
      	or
      	 description like CONCAT('%',#{searchName,jdbcType=VARCHAR},'%')
    	)
     </if>	 
        <if test="searchTime != null and searchTime !='' and searchTimeNext !='' and searchTimeNext != null">
     and 
        create_time  between #{searchTime,jdbcType=DATE}  and #{searchTimeNext,jdbcType=DATE}  
     </if>	 
       <if test="searchTypeId != null and searchTypeId !=''" >
      and 
       type_id = #{searchTypeId,jdbcType=INTEGER}
     </if>	 
  </sql>
  
  
  
  <select id="getLogList" resultMap="VMModelResultMap" parameterType="com.tianyi.yw.model.Log">
  	 select 
  	 <include refid="Base_Column_List" /> 
  	 (select t2.name  from t_log_type t2
		where type_id = t2.id
		) as type_name		
  	 <include refid="query_sql" />
  	 <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
    </if>
  </select>
 
  
  <select id="getLogCount" resultType="java.lang.Integer" parameterType="com.tianyi.yw.model.Log">
  	 select count(*)
  	 <include refid="query_sql" />
  </select>
  
  <select id="getExisLog" resultMap="BaseResultMap" parameterType="com.tianyi.yw.model.Log">
  	select <include refid="Base_Column_List" />
  	from t_log
  	where 1=1
  	<if test="typeId != null" >
        and  type_id = #{typeId,jdbcType=VARCHAR}
    </if>
    <if test="content != null" >
        and  content = #{content,jdbcType=VARCHAR}
    </if>
    <if test="id != null" >
        and id != #{id,jdbcType=VARCHAR}
    </if>
  </select>
  
   <select id="getExistList" resultMap="BaseResultMap" parameterType="com.tianyi.yw.model.Log" >
    select
    
    <include refid="Base_Column_List" />
    <include refid="query_sql"/>
    <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
  	</if>
  </select>
   <resultMap id="VMModelResultMap" type="com.tianyi.yw.model.Log" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="type_name" property="typeName" jdbcType="VARCHAR" />
  </resultMap>
</mapper>
