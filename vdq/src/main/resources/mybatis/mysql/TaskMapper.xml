<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tianyi.yw.dao.TaskMapper" >
  <resultMap id="BaseResultMap" type="com.tianyi.yw.model.Task" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="run_intervals" property="runIntervals" jdbcType="INTEGER" />
    <result column="run_times" property="runTimes" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="run_count" property="runCount" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    t.id, t.name,t.start_time, t.run_intervals, t.run_times, t.run_count,t.create_time, t.flag
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_task t
    where t.id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_task
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tianyi.yw.model.Task" >
		<selectKey resultType="INTEGER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		</selectKey>
    insert into t_task (id,name, start_time, run_intervals, 
      run_times, run_count, create_time,flag
      )
    values (#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},  #{startTime,jdbcType=TIMESTAMP}, #{runIntervals,jdbcType=INTEGER}, 
      #{runTimes,jdbcType=INTEGER}, #{runCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{flag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.tianyi.yw.model.Task" >
    insert into t_task
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="runIntervals != null" >
        run_intervals,
      </if>
      <if test="runTimes != null" >
        run_times,
      </if>
      <if test="runCount != null" >
        run_count,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>     
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="runIntervals != null" >
        #{runIntervals,jdbcType=INTEGER},
      </if>
      <if test="runTimes != null" >
        #{runTimes,jdbcType=INTEGER},
      </if>
      <if test="runCount != null" >
        #{runCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tianyi.yw.model.Task" >
    update t_task
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="runIntervals != null" >
        run_intervals = #{runIntervals,jdbcType=INTEGER},
      </if>
      <if test="runTimes != null" >
        run_times = #{runTimes,jdbcType=INTEGER},
      </if>
      <if test="runCount != null" >
        run_count = #{runCount,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tianyi.yw.model.Task" >
    update t_task
    set name = #{name,jdbcType=VARCHAR},
    start_time = #{startTime,jdbcType=TIMESTAMP},
      run_intervals = #{runIntervals,jdbcType=INTEGER},
      run_times = #{runTimes,jdbcType=INTEGER},
      run_count = #{runCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
   <sql id="query_sql">
  	from t_task t 
  	where 1=1 	    
  	 <if test="searchName != null and searchName !=''" >
      and   
      	t.name like CONCAT('%',#{searchName,jdbcType=VARCHAR},'%')
     </if>
      <if test="startedTime != null and startedTime !='' and endTime !='' and endTime != null">
     and 
        t.start_time  between #{startedTime,jdbcType=DATE}  and #{endTime,jdbcType=DATE} 
     </if>	
  </sql>
  
   <select id="getExistList" resultMap="BaseResultMap" parameterType="com.tianyi.yw.model.Task" >
    select
    
    <include refid="Base_Column_List" />
    <include refid="query_sql"/>
    <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
  	</if>
  </select> 
    <select id="getTaskCount" resultType="java.lang.Integer" parameterType="com.tianyi.yw.model.Task">
  	 select count(*)
  	 <include refid="query_sql" />
  </select>
  
   <select id="getRunTaskCount" resultType="java.lang.Integer" parameterType="com.tianyi.yw.model.Task">
  	 select count(*) 	 
  	 from t_task t 
  	 where t.flag=1  	 
  </select>
  
  <select id="getExistTask" resultMap="BaseResultMap" parameterType="com.tianyi.yw.model.Task">
  	select <include refid="Base_Column_List" />
  	from t_task t   where 
  	  1 = 1
  	<if test="name != null" >
        and  t.name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="id != null" >
        and t.id != #{id,jdbcType=INTEGER}
    </if>
  </select>
  <resultMap id="VMModelResultMap" type="com.tianyi.yw.model.Task" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="run_intervals" property="runIntervals" jdbcType="INTEGER" />
    <result column="run_times" property="runTimes" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="run_count" property="runCount" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="item_type_name" property="itemTypeName" jdbcType="VARCHAR" />
    <result column="item_type_id" property="itemTypeId" jdbcType="VARCHAR" />
    <result column="task_run_status" property="runStatus" jdbcType="INTEGER" />
  </resultMap>
  <select id="getTaskById" resultMap="VMModelResultMap" parameterType="java.lang.Integer" >
    select <include refid="Base_Column_List" />, 
		(select GROUP_CONCAT( tt.`id` SEPARATOR "," )  from t_task as t1
		 left join t_task_item  ti on t1.id = ti.task_id
		 left join t_task_item_type tt on ti.item_type_id = tt.id
		where t.id = t1.id
		) as item_type_id	
		from t_task t
		 where t.id =  #{id,jdbcType=INTEGER} 
  </select> 
  <select id="getTaskList" resultMap="VMModelResultMap" parameterType="com.tianyi.yw.model.Task" >
    select <include refid="Base_Column_List" />, 
		(select GROUP_CONCAT( tt.`name` SEPARATOR "," )  from t_task as t1
		 left join t_task_item  ti on t1.id = ti.task_id
		 left join t_task_item_type tt on ti.item_type_id = tt.id
		where t.id = t1.id
		) as item_type_name,
		(select GROUP_CONCAT( tt.`id` SEPARATOR "," )  from t_task as t1
		 left join t_task_item  ti on t1.id = ti.task_id
		 left join t_task_item_type tt on ti.item_type_id = tt.id
		where t.id = t1.id
		) as item_type_id,
		( select count(dd.id) from t_device_diagnosis dd where dd.task_id = t.id ) as task_run_status	
		<include refid="query_sql"/> 
		order by t.id desc  
		 <if test="pageStart != null and pageSize != null and pageStart>-1 and pageSize>-1">
        limit #{pageStart}, #{pageSize}
  		</if>
  </select> 
  
  <select id="getEffectTaskList" resultMap="VMModelResultMap" parameterType="com.tianyi.yw.model.Task" >
    select t.id ,t.name,
		(select GROUP_CONCAT( tt.`name` SEPARATOR "," )  from t_task as t1
		 left join t_task_item  ti on t1.id = ti.task_id
		 left join t_task_item_type tt on ti.item_type_id = tt.id
		where t.id = t1.id
		) as item_type_name,
    (select GROUP_CONCAT( tt.`id` SEPARATOR "," )  from t_task as t1
		 left join t_task_item  ti on t1.id = ti.task_id
		 left join t_task_item_type tt on ti.item_type_id = tt.id
		where t.id = t1.id
		) as item_type_id	
		from  t_task t
		where 1 = 1 
		<if test="flag != null">
			and t.flag = #{flag,jdbcType=INTEGER}
		</if>
  </select> 
</mapper>




 



 
  
  
  
  
  
  
